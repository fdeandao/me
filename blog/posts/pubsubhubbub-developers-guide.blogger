
<h2><a name="naming_conventions">naming conventions</a></h2><ul><li><a name="naming_conventions">pshb/PSHB = pubsubhubbub </a></li><li><a name="naming_conventions">gae/GAE = Google App Engine </a></li><li><a name="naming_conventions">things that start with "$" are bash commands </a></li><li><a name="naming_conventions">things that start with "!" are important notes </a></li></ul><h2><a name="create_directory_to_hold_all_the_content_of_this_tutorial">create directory to hold all the content of this tutorial</a></h2><pre class="prettyprint"><a name="create_directory_to_hold_all_the_content_of_this_tutorial"><span class="pln">$ mkdir pshb<br/>$ cd pshb</span></a></pre><h2><a name="download_Google_App_Engine_SDK">download Google App Engine SDK</a></h2><p><a name="download_Google_App_Engine_SDK"><strong>!</strong> pshb trunk needs the latest version of GAE (1.2.4 as of today) to work, but <strong>!</strong> the download page display an older version </a></p><pre class="prettyprint"><a name="download_Google_App_Engine_SDK"><span class="pln">$ wget http</span><span class="pun">:</span><span class="com">//googleappengine.googlecode.com/files/google_appengine_1.2.4.zip</span><span class="pln"><br/>$ unzip google_appengine_1</span><span class="pun">.</span><span class="lit">2.4</span><span class="pun">.</span><span class="pln">zip</span></a></pre><p><a name="download_Google_App_Engine_SDK"><strong>!</strong> GAE needs python 2.5 in order to work, if you have an older or newer version of python install python 2.5 (OS and distro dependent, wont be covered here) </a></p><h2><a name="download_the_latest_version_of_pshb">download the latest version of pshb</a></h2><pre class="prettyprint"><a name="download_the_latest_version_of_pshb"><span class="pln">$ svn checkout http</span><span class="pun">:</span><span class="com">//pubsubhubbub.googlecode.com/svn/trunk/ pubsubhubbub</span></a></pre><h2><a name="start_pshb">start pshb</a></h2><pre class="prettyprint"><a name="start_pshb"><span class="pln">$ python2</span><span class="pun">.</span><span class="lit">5</span><span class="pln"> google_appengine</span><span class="pun">/</span><span class="pln">dev_appserver</span><span class="pun">.</span><span class="pln">py pubsubhubbub</span><span class="pun">/</span><span class="pln">hub</span><span class="pun">/</span></a></pre><p><a name="start_pshb"><strong>!</strong> note the python2.5 command </a></p><h2><a name="check_that_the_hub_started">check that the hub started</a></h2><p><a name="check_that_the_hub_started">type <span style="border-bottom: 1px dotted black;">http://localhost:8080</span> on your browser, you should see something like: </a></p><p><a name="check_that_the_hub_started"><i>Welcome to the demo <span style="border-bottom: 1px dotted black;">PubSubHubbub</span> reference Hub server!</i></a></p><p><a name="check_that_the_hub_started"/></p><p><a name="check_that_the_hub_started"/></p><br/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://3.bp.blogspot.com/_XkKIWh0VZYk/SqrdHFQ2i6I/AAAAAAAAGxs/kPxuBPwJ6Nc/s1600-h/pshb0.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 320px; height: 200px;" src="http://3.bp.blogspot.com/_XkKIWh0VZYk/SqrdHFQ2i6I/AAAAAAAAGxs/kPxuBPwJ6Nc/s320/pshb0.png" alt="" id="BLOGGER_PHOTO_ID_5380355818589162402" border="0"/></a><br/><br/><h2><a name="download_the_example">download the example</a></h2><pre class="prettyprint"><a name="download_the_example"><span class="com"># we will need to fetch the tubes library and the example that we will be using.</span><span class="pln"><br/>$ git clone git</span><span class="pun">:</span><span class="com">//github.com/marianoguerra/tubes.git</span><span class="pln"><br/><br/></span><span class="com"># now we will start the example</span><span class="pln"><br/><br/>$ cd tubes</span><span class="pun">/</span><span class="pln">ihasfriendz</span><span class="pun">/</span><span class="pln"><br/>$ python main</span><span class="pun">.</span><span class="pln">py</span></a></pre><p><a name="download_the_example">we should see something like: </a></p><pre class="prettyprint"><a name="download_the_example"><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="typ">Running</span><span class="pln"> on http</span><span class="pun">:</span><span class="com">//0.0.0.0:8081/</span><span class="pln"><br/></span><span class="pun">*</span><span class="pln"> </span><span class="typ">Restarting</span><span class="pln"> </span><span class="kwd">with</span><span class="pln"> reloader</span><span class="pun">...</span></a></pre><h3><a name="components_used_by_the_example">components used by the example</a></h3><p><a name="components_used_by_the_example">   </a></p><ul><li><a name="components_used_by_the_example">werkzeug: <span style="border-bottom: 1px dotted black;">http://werkzeug.pocoo.org</span> </a></li><li><a name="components_used_by_the_example">jquery: <span style="border-bottom: 1px dotted black;">http://jquery.com</span> </a></li><li><a name="components_used_by_the_example">tubes: <span style="border-bottom: 1px dotted black;">http://github.com/marianoguerra/tubes/tree/master</span> </a></li><li><a name="components_used_by_the_example">pubsubhubbub_publish.py: from pshb </a></li><li><a name="components_used_by_the_example">feedformatter.py: <span style="border-bottom: 1px dotted black;">http://code.google.com/p/feedformatter/</span> </a></li></ul><h2><a name="publish_the_feed_to_the_hub">publish the feed to the hub</a></h2><p><a name="publish_the_feed_to_the_hub">go to the following URL on your browser: <span style="border-bottom: 1px dotted black;">http://localhost:8080/publish</span> </a></p><p><a name="publish_the_feed_to_the_hub">on the <i>Topic</i> field enter: <span style="border-bottom: 1px dotted black;">http://localhost:8081/atom/stream/_MYUSER_</span> and click publish </a></p><p><a name="publish_the_feed_to_the_hub"><strong>!</strong> if everything goes OK, then you wont notice anything on the page, that's ok, browsers act that way to 204 responses </a></p><p><a name="publish_the_feed_to_the_hub"><strong>!</strong> <i>MYUSER</i> is a placeholder for the user you will use to post notices on the test app later (for example <span style="border-bottom: 1px dotted black;">http://localhost:8081/atom/stream/marianoguerra</span>) </a></p><br/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/_XkKIWh0VZYk/SqrdHbMyTDI/AAAAAAAAGx0/HU3XaAhjP_w/s1600-h/pshb1.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 320px; height: 200px;" src="http://4.bp.blogspot.com/_XkKIWh0VZYk/SqrdHbMyTDI/AAAAAAAAGx0/HU3XaAhjP_w/s320/pshb1.png" alt="" id="BLOGGER_PHOTO_ID_5380355824477686834" border="0"/></a><br/><br/><h2><a name="subscribing_to_the_hub">subscribing to the hub</a></h2><p><a name="subscribing_to_the_hub">go to the following URL on your browser: <span style="border-bottom: 1px dotted black;">http://localhost:8080/subscribe</span> </a></p><p><a name="subscribing_to_the_hub">on the <i>Callback</i> field enter: <span style="border-bottom: 1px dotted black;">http://localhost:8081/callback</span> on the <i>Topic</i> field enter: <span style="border-bottom: 1px dotted black;">http://localhost:8081/atom/stream/_MYUSER_</span> on the <i>Verify token</i> field enter something random like: <i>iwantmahcookie</i> </a></p><p><a name="subscribing_to_the_hub"><strong>!</strong> <i>MYUSER</i> is a placeholder for the user you will use to post notices on the test app later (for example <span style="border-bottom: 1px dotted black;">http://localhost:8081/atom/stream/marianoguerra</span>) </a></p><p><a name="subscribing_to_the_hub">click <i>Do it</i> </a></p><p><a name="subscribing_to_the_hub"><strong>!</strong> if everything goes OK, then you wont notice anything on the page, that's OK, browsers act that way to 204 responses </a></p><br/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://4.bp.blogspot.com/_XkKIWh0VZYk/SqrdHx3cWDI/AAAAAAAAGx8/V4UrVzmx1Tc/s1600-h/pshb2.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 320px; height: 200px;" src="http://4.bp.blogspot.com/_XkKIWh0VZYk/SqrdHx3cWDI/AAAAAAAAGx8/V4UrVzmx1Tc/s320/pshb2.png" alt="" id="BLOGGER_PHOTO_ID_5380355830562183218" border="0"/></a><h2><a name="create_some_content">create some content</a></h2><p><a name="create_some_content">go to the following URL on your browser: <span style="border-bottom: 1px dotted black;">http://localhost:8081/files/index.html</span> </a></p><p><a name="create_some_content">post some content on the form, use the user you used as <i>MYUSER</i> </a></p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://3.bp.blogspot.com/_XkKIWh0VZYk/SqrdIRtBMoI/AAAAAAAAGyE/hOtiESEaaHY/s1600-h/pshb3.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 320px; height: 200px;" src="http://3.bp.blogspot.com/_XkKIWh0VZYk/SqrdIRtBMoI/AAAAAAAAGyE/hOtiESEaaHY/s320/pshb3.png" alt="" id="BLOGGER_PHOTO_ID_5380355839108395650" border="0"/></a><a name="create_some_content"><br/>you can check that the item was posted going manually to <span style="border-bottom: 1px dotted black;">http://localhost:8081/atom/stream/_MYUSER_</span>, you should see an atom feed there<br/></a><p><a name="create_some_content"/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_XkKIWh0VZYk/SqrdJC1gwRI/AAAAAAAAGyM/vKPiADfZpLI/s1600-h/pshb4.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 320px; height: 200px;" src="http://1.bp.blogspot.com/_XkKIWh0VZYk/SqrdJC1gwRI/AAAAAAAAGyM/vKPiADfZpLI/s320/pshb4.png" alt="" id="BLOGGER_PHOTO_ID_5380355852297355538" border="0"/></a></p><h2><a name="manually_processing_the_tasks">manually processing the tasks</a></h2><p><a name="manually_processing_the_tasks">when running the hub on the dev server we have to run the task queues by hand, to do that go to <span style="border-bottom: 1px dotted black;">http://localhost:8080/_ah/admin/queues</span></a></p><p><a name="manually_processing_the_tasks"/></p><br/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://2.bp.blogspot.com/_XkKIWh0VZYk/Sqrd_5aSiyI/AAAAAAAAGyU/pjEz8TOZXWc/s1600-h/pshb5.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 320px; height: 200px;" src="http://2.bp.blogspot.com/_XkKIWh0VZYk/Sqrd_5aSiyI/AAAAAAAAGyU/pjEz8TOZXWc/s320/pshb5.png" alt="" id="BLOGGER_PHOTO_ID_5380356794660064034" border="0"/></a><br/><p><a name="manually_processing_the_tasks">on the <i>Tasks in Queue</i> column of the <i>feed-pulls</i> you should see a number different than 0 (that is the number of messages you created since the last execution of that task). </a></p><p><a name="manually_processing_the_tasks">click on the <i>feed-pulls</i> link, there click on the <i>run</i> button. </a></p><p><a name="manually_processing_the_tasks">when we run the feed pulls task, we tell pshb to fetch th</a><a name="manually_processing_the_tasks">e feeds that have new content (the ones that did a post to the hub to inform that there is new content)<br/></a></p><p><a name="manually_processing_the_tasks"/></p><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://3.bp.blogspot.com/_XkKIWh0VZYk/SqreATS1_OI/AAAAAAAAGyc/loOLwdvXcSk/s1600-h/pshb6.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 320px; height: 200px;" src="http://3.bp.blogspot.com/_XkKIWh0VZYk/SqreATS1_OI/AAAAAAAAGyc/loOLwdvXcSk/s320/pshb6.png" alt="" id="BLOGGER_PHOTO_ID_5380356801608154338" border="0"/></a><p><a name="manually_processing_the_tasks"><strong>!</strong>  on production hubs this tasks are done autom</a><a name="manually_processing_the_tasks">atically </a></p><p><a name="manually_processing_the_tasks">now we go again to the <i>Task Queues</i> page, th</a><a name="manually_processing_the_tasks">ere the <i>event-delivery</i> queue should have a number different than 0 (the number of messages that are pending to be sent to the subscribers), we click on the <i>event-delivery</i> and then we click on the <i>run</i> button. </a></p><p><a name="manually_processing_the_tasks">when we run the event delivery task, we tell pshb to do a POST on every callback url registered for the feeds that were fetched on the <i>feed-pulls</i> task. </a></p><br/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_XkKIWh0VZYk/SqreA9bViFI/AAAAAAAAGyk/TOOj_6tdoJ8/s1600-h/pshb7.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 320px; height: 200px;" src="http://1.bp.blogspot.com/_XkKIWh0VZYk/SqreA9bViFI/AAAAAAAAGyk/TOOj_6tdoJ8/s320/pshb7.png" alt="" id="BLOGGER_PHOTO_ID_5380356812918065234" border="0"/></a><h2><a name="seeing_it_work">seeing it work</a></h2><p><a name="seeing_it_work">now that we created a feed, informed the hub that we had new content, the hub fetched the content and sent it to the callback, we want to see this content, for this go with your browser to <span style="border-bottom: 1px dotted black;">http://localhost:8081/new-notices/</span>, you will see the notices that pshb posted back to you the last time. </a></p><br/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://1.bp.blogspot.com/_XkKIWh0VZYk/SqreBWaXNCI/AAAAAAAAGys/wxGClI7Q2S0/s1600-h/pshb8.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer; width: 320px; height: 200px;" src="http://1.bp.blogspot.com/_XkKIWh0VZYk/SqreBWaXNCI/AAAAAAAAGys/wxGClI7Q2S0/s320/pshb8.png" alt="" id="BLOGGER_PHOTO_ID_5380356819624866850" border="0"/></a><br/><p><a name="seeing_it_work"><strong>!</strong> if you refresh the page you will notice that the messages aren't there anymore, that's because the example stores the new messages in a Queue that is flushed when the request for new notices is made, in this way you can see only the new messages. </a></p><p><a name="seeing_it_work"><strong>!</strong> the example stores all the information on global variables on main.py (this is to make the example simpler), so every time you change something on main.py and save the server will reload the changes and all the data will disappear. </a></p><h2><a name="for_lazy_people">for lazy people</a></h2><pre class="prettyprint"><a name="for_lazy_people"><span class="com">#!/usr/bin/env sh</span><span class="pln"><br/><br/></span><span class="com"># create the example directory</span><span class="pln"><br/>mkdir pshb<br/>cd pshb<br/><br/>CWD</span><span class="pun">=</span><span class="pln">$</span><span class="pun">(</span><span class="pln">pwd</span><span class="pun">)</span><span class="pln"><br/>EXAMPLE</span><span class="pun">=</span><span class="pln">$CWD</span><span class="pun">/</span><span class="pln">tubes</span><span class="pun">/</span><span class="pln">ihasfriendz<br/><br/>wget http</span><span class="pun">:</span><span class="com">//googleappengine.googlecode.com/files/google_appengine_1.2.4.zip</span><span class="pln"><br/>unzip google_appengine_1</span><span class="pun">.</span><span class="lit">2.4</span><span class="pun">.</span><span class="pln">zip<br/><br/>svn checkout http</span><span class="pun">:</span><span class="com">//pubsubhubbub.googlecode.com/svn/trunk/ pubsubhubbub</span><span class="pln"><br/><br/><br/></span><span class="com"># we will need to fetch the tubes library and the example that we will be using.</span><span class="pln"><br/>git clone git</span><span class="pun">:</span><span class="com">//github.com/marianoguerra/tubes.git</span><span class="pln"><br/><br/></span><span class="com"># now we will start the example</span><span class="pln"><br/><br/>echo </span><span class="str">"run \"cd $EXAMPLE; python main.py\" on a shell to run the example"</span><span class="pln"><br/>echo </span><span class="str">"run \"cd $PWD; python2.5 google_appengine/dev_appserver.py pubsubhubbub/hub/\" on a shell to run the hub"</span></a></pre>
<div style="clear: both;"/>
