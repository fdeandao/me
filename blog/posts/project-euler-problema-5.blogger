
Hasta ahora a todos los problemas los venia resolviendo por fueza bruta aplicando algunas optimizaciones (para que no sea tan bruto vio?), pero decidi ejercitar un poco mis conocimientos matematicos para intentar resolverlo puramente con matematicas o al menos eliminar muchas cosas innecesarias.<br/><br/>el problema 5 es este:<br/><br/>2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.<br/><br/>What is the smallest number that is evenly divisible by all of the numbers from 1 to 20?<br/><br/>agarre un lapiz y un papel (posta!) y me puse a pensar un poco.<br/><br/>Lo primero que probe (fuerza bruta matematica) es el producto de los numeros del 1 al 20 es divisible por todos ellos, el problema es que no es el mas chico.. entonces pense un poco mas. Porque no es el mas chico? bueno, porque ahi hay muchas multiplicaciones innecesarias, si es multiplo de 20 es tambien multiplo de 10, 5, 4 2 etc.<br/><br/>despues de eso llegue a la conclusion de que el numero era el producto de los numeros del 11 al 20, pero resulto no ser asi, pense un rato mas y no se me ocurrio nada asi que decidi darle mi problema acotado a python, lo que hice a grandes rasgos fue.<br/><br/>incrementar de a 380 el contador (producto de 20 y 19), y ya que incremento en multiplos de 20 y 19 no me hace falta controlar que sean multiplos de ellos, por lo tanto hice una lista de numeros del 18 al 11 ya que los numeros mas chicos se comprueban comprobando esos. Puse los numeros al reves ya que si el numero divisor es mas grande tiene menos numeros multiplos, por lo tanto al cortar al encontrar un numero no divisor en los numeros mas grandes me ahorro algunos calculos innecesarios.<br/><br/>cuando entre a las soluciones vi que la solucion del problema tenia que ver con multiplicar numeros, pero no los numeros en si, sino las potencias mas altas de los primos de la factorizacion del 1 al 20. (aca esta la explicacion http://mathforum.org/library/drmath/view/62527.html)<br/><br/>y bue, tan bueno en la matematica no soy :D<br/><br/>codigo en python<br/><br/><div class="highlight"><pre><span class="n">NUMS</span> <span class="o">=</span> <span class="p">[</span><span class="nb">float</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mf">11</span><span class="p">,</span> <span class="mf">19</span><span class="p">)]</span><br/><span class="n">NUMS</span><span class="o">.</span><span class="n">reverse</span><span class="p">()</span><br/><br/><span class="k">def</span> <span class="nf">first_multiple_from_1_to_20</span><span class="p">():</span><br/><span class="n">num</span> <span class="o">=</span> <span class="mf">380</span><br/><br/><span class="k">while</span> <span class="bp">True</span><span class="p">:</span><br/><span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">NUMS</span><span class="p">:</span><br/><span class="k">if</span> <span class="n">num</span> <span class="o">%</span> <span class="n">x</span> <span class="o">!=</span> <span class="mf">0</span><span class="p">:</span><br/><span class="k">break</span><br/><span class="k">else</span><span class="p">:</span><br/><span class="k">return</span> <span class="n">num</span><br/><br/><span class="n">num</span> <span class="o">+=</span> <span class="mf">380</span><br/><br/><span class="n">num</span> <span class="o">=</span> <span class="n">first_multiple_from_1_to_20</span><span class="p">()</span><br/><br/><span class="k">print</span> <span class="n">num</span><br/></pre></div><br/><br/>erlang<br/><br/><div class="highlight"><pre><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">ej_005</span><span class="p">).</span><br/><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">first_multiple_from_1_to_20</span><span class="o">/</span><span class="mi">0</span><span class="p">]).</span><br/><br/><span class="nf">is_multiple_from_11_to_18</span><span class="p">(_</span><span class="nv">Value</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">true</span><span class="p">;</span><br/><span class="nf">is_multiple_from_11_to_18</span><span class="p">(</span><span class="nv">Value</span><span class="p">,</span> <span class="nv">Number</span><span class="p">)</span> <span class="o">-&gt;</span><br/><span class="k">case</span> <span class="nv">Value</span> <span class="ow">rem</span> <span class="nv">Number</span> <span class="o">==</span> <span class="mi">0</span> <span class="k">of</span><br/><span class="n">true</span> <span class="o">-&gt;</span> <span class="n">is_multiple_from_11_to_18</span><span class="p">(</span><span class="nv">Value</span><span class="p">,</span> <span class="nv">Number</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span><br/><span class="n">false</span> <span class="o">-&gt;</span> <span class="n">false</span><br/><span class="k">end</span><span class="p">.</span><br/><br/><span class="nf">is_multiple_from_11_to_18</span><span class="p">(</span><span class="nv">Value</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">is_multiple_from_11_to_18</span><span class="p">(</span><span class="nv">Value</span><span class="p">,</span> <span class="mi">18</span><span class="p">).</span><br/><br/><span class="nf">first_multiple_from_1_to_20</span><span class="p">(</span><span class="nv">Count</span><span class="p">)</span> <span class="o">-&gt;</span><br/><span class="k">case</span> <span class="n">is_multiple_from_11_to_18</span><span class="p">(</span><span class="nv">Count</span><span class="p">)</span> <span class="k">of</span><br/><span class="n">true</span> <span class="o">-&gt;</span> <span class="nv">Count</span><span class="p">;</span><br/><span class="n">false</span> <span class="o">-&gt;</span> <span class="n">first_multiple_from_1_to_20</span><span class="p">(</span><span class="nv">Count</span> <span class="o">+</span> <span class="mi">380</span><span class="p">)</span><br/><span class="k">end</span><span class="p">.</span><br/><br/><span class="nf">first_multiple_from_1_to_20</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">first_multiple_from_1_to_20</span><span class="p">(</span><span class="mi">380</span><span class="p">).</span><br/></pre></div><br/><br/><br/>lisp<br/><br/><div class="highlight"><pre><span class="p">(</span><span class="nb">defun</span> <span class="nv">is-multiple-from-11-to-18</span> <span class="p">(</span><span class="nv">value</span><span class="p">)</span><br/><span class="p">(</span><span class="nb">=</span> <span class="p">(</span><span class="nb">loop</span> <span class="nv">for</span> <span class="nv">i</span> <span class="nv">from</span> <span class="mi">18</span> <span class="nv">downto</span> <span class="mi">11</span> <span class="nv">by</span> <span class="mi">1</span><br/><span class="nv">while</span> <span class="p">(</span><span class="nb">=</span> <span class="p">(</span><span class="nb">mod</span> <span class="nv">value</span> <span class="nv">i</span><span class="p">)</span> <span class="mi">0</span><span class="p">)</span> <span class="nv">finally</span> <span class="p">(</span><span class="nb">return</span> <span class="nv">i</span><span class="p">))</span> <span class="mi">10</span><span class="p">))</span><br/><br/><span class="p">(</span><span class="nb">defun</span> <span class="nv">first-multiple-from-1-to-20</span> <span class="p">()</span><br/><span class="p">(</span><span class="nb">loop</span> <span class="nv">for</span> <span class="nv">i</span> <span class="nv">from</span> <span class="mi">380</span> <span class="nv">by</span> <span class="mi">380</span> <br/><span class="nv">while</span> <span class="p">(</span><span class="nb">not</span> <span class="p">(</span><span class="nv">is-multiple-from-11-to-18</span> <span class="nv">i</span><span class="p">))</span><br/><span class="nv">finally</span> <span class="p">(</span><span class="nb">return</span> <span class="nv">i</span><span class="p">)))</span><br/><br/><span class="p">(</span><span class="nb">print</span> <span class="p">(</span><span class="nv">first-multiple-from-1-to-20</span><span class="p">))</span><br/></pre></div>
<div style="clear: both;"/>
