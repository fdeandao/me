
Como tarea en un grupo de la facultad del que formo parte tenemos que resolver ejercicios de MPI, como yo algo de idea de MPI tengo decidí también resolverlos en erlang para seguir aprendiendo mas de este lenguaje, acá van los enunciados del primer ejercicio y las resoluciones de ambos.<br/><br/><span style="font-style: italic;">Write a program that uses </span><a style="font-style: italic;" href="http://www-unix.mcs.anl.gov/mpi/www/www1/MPI.html#MPI">MPI</a><span style="font-style: italic;"> and has each </span><a style="font-style: italic;" href="http://www-unix.mcs.anl.gov/mpi/www/www1/MPI.html#MPI">MPI</a><span style="font-style: italic;"> process print </span><pre style="font-style: italic;">Hello world from process i of n<br/></pre><span style="font-style: italic;"> using the rank in MPI_COMM_WORLD for i and the size of MPI_COMM_WORLD for n. You can assume that all processes support output for this example.</span><br/><br/>el ejercicio en C lo pueden ver en el post anterior así que acá pego el de erlang nomas<br/><br/><div class="highlight"><pre><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">ej1</span><span class="p">).</span><br/><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">run</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span><br/><br/><span class="nf">run</span><span class="p">(</span><span class="nv">Total</span><span class="p">,</span> <span class="nv">Total</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">ok</span><span class="p">;</span><br/><span class="nf">run</span><span class="p">(</span><span class="nv">Count</span><span class="p">,</span> <span class="nv">Total</span><span class="p">)</span> <span class="o">-&gt;</span><br/><span class="nb">spawn</span><span class="p">(</span><span class="k">fun</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="n">salute</span><span class="p">(</span><span class="nv">Total</span><span class="p">)</span> <span class="k">end</span><span class="p">),</span><br/><span class="n">run</span><span class="p">(</span><span class="nv">Count</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="nv">Total</span><span class="p">).</span><br/><br/><span class="nf">run</span><span class="p">(</span><span class="nv">Total</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">run</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nv">Total</span><span class="p">).</span><br/><br/><span class="nf">salute</span><span class="p">(</span><span class="nv">Total</span><span class="p">)</span> <span class="o">-&gt;</span><br/><span class="nn">io</span><span class="p">:</span><span class="n">format</span><span class="p">(</span><span class="s">"Hello world from </span><span class="si">~p</span><span class="s"> of </span><span class="si">~p~n</span><span class="s">"</span><span class="p">,</span> <span class="p">[</span><span class="n">self</span><span class="p">(),</span> <span class="nv">Total</span><span class="p">]).</span><br/></pre></div><br/><br/>como en erlang no hay una forma de saber cuantos procesos totales hay dando vueltas (o al menos no es tan estatico como MPI) decidi pasarle el total y imprimir el PID.<br/><br/>para correrlo y ver la salida la forma facil es:<br/><br/>$ erl ej1.erl<br/>Erlang (BEAM) emulator version 5.6.5 [source] [async-threads:0] [kernel-poll:false]<br/><br/>Eshell V5.6.5  (abort with ^G)<br/>1&gt; c(ej1).<br/>{ok,ej1}<br/>2&gt; ej1:run(4).<br/>Hello world from  of 4<br/>Hello world from  of 4<br/>Hello world from  of 4<br/>Hello world from  of 4<br/>ok<br/>3&gt;<br/><br/>todo en orden, vamos a por el segundo<br/><br/>como nota al margen, donde hice el pattern matching de <br/><br/>run(Total, Total) -&gt; ok;<br/><br/>podria haber hecho <br/><br/>run(0, _Total) -&gt; ok;<br/><br/>y contar al reves en <br/><br/>run(Count + 1, Total).<br/><br/>por <br/><br/>run(Count - 1, Total).<br/><br/>pero me parecio mas simpatico contar para adelante :P
<div style="clear: both;"/>
