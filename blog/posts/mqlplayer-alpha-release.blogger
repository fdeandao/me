
llega el momento en la vida de todo hombre en el cual uno se cansa de los reproductores de mp3 y se programa uno a gusto (?)<br/><br/>asi fue... hiba en el colectivo camino a  la facultad y se me ocurrio un reproductor de mp3 bien simple<br/><br/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://photos1.blogger.com/blogger/4012/785/1600/Pantallazo-MqlPlayer2.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://photos1.blogger.com/blogger/4012/785/400/Pantallazo-MqlPlayer2.png" alt="" border="0"/></a>ustedes pensaran: que fotorrealistas que son las cosas que se imagina este vago!<br/>yo les digo: y si asi me imagino las cosas en formato jpg de alta calidad!<br/>tambien pensaran: que porqueria que es eso! guacala ( esto lo penso tuza :P )<br/>yo les digo: mirenme ( si no lo entendes no ves los simpsons )<br/><br/>la gracia del reproductor son dos cosas:<ul><li>simple ( se nota )</li><li>tiene un lenguaje propio ( mql )</li></ul>about mql:<br/>mql ( music query languaje ) es un lenguaje que se me ocurrio para hacer querys a una base de datos que solo contiene musica, la sintaxis es muy parecida a SQL pero se limita a aspectos musicales nomas.<br/><br/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://photos1.blogger.com/blogger/4012/785/1600/Pantallazo-MqlPlayer1.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://photos1.blogger.com/blogger/4012/785/400/Pantallazo-MqlPlayer1.png" alt="" border="0"/></a>en este screenshot seleccione todas las canciones de los cds que tengan de nombre algo que empiece con mellon y siga con cualquier cosa.<br/>esto me devolvio los dos discos de smashing pumpkins "mellon collie and the infinite sadness" en la lista.<br/><br/>otro tipo de querys que se pueden hacer:<br/><ul><li>import "/data/Musica": explora recursivamente el directorio "/data/Musica" e indexa a la base de datos  los mp3 que encuentre.</li><li>select artist where name = "Portishead": trae todas las canciones que sean de la banda portishead</li><li>select artist where name like "%head": trae todas las canciones que sean de una banda cuyo nombre termine en head ( en mi caso radiohead y portishead )</li><li>select song where name = "loquesea": igual al de artista<br/></li><li>select song where name like "_oquesea": selecciona todas las canciones cuyo nombre tenga un caracter cualquiera en la primera posicion (y solo uno ) y termine en "oquesea"</li><li>select song where genre = "punk": selecciona todas las canciones del genero punk</li><li>select song where genre like "punk%": selecciona todas las canciones cuyo genero empieze por punk ( ej punk y punkrock )</li><li>select all: selecciona todo lo que hay en la base de datos</li><li>etc</li></ul>tambien se pueden hacer querys por el numero de pista ( = , &gt; ), por el largo de la cancion ( = , &gt; ) aunque todavia la base de datos no indexa la duracion, por el a√±o del cd  ( = , &gt; ) etc...<br/><br/>datos tecnicos:<br/><ul><li>lenguaje: python</li><li>librerias: pygtk, pysqlite, pygst</li><li>SO: cualquier unix like y supongo que windows tambien ( gstreamer es el unico problema )</li></ul>para tuza: reproduce mp3<br/><br/><br/><a onblur="try {parent.deselectBloggerImageGracefully();} catch(e) {}" href="http://photos1.blogger.com/blogger/4012/785/1600/mqlplayer.png"><img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="http://photos1.blogger.com/blogger/4012/785/320/mqlplayer.jpg" alt="" border="0"/></a>
<div style="clear: both;"/>
