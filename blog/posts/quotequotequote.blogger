
soy adicto a los quotes :)<br/><br/><p>The cheapest, fastest, and most reliable components are those that aren't there.</p>  <pre><code>-- Gordon Bell<br/><br/></code></pre><p>One of my most productive days was throwing away 1000 lines of code.</p>  <code>-- Ken Thompson<br/><br/></code><p>Deleted code is debugged code.</p>  <pre><code>-- Jeff Sickel<br/><br/></code></pre><p>The most effective debugging tool is still careful thought, coupled with judiciously placed print statements.</p>  <code>-- Brian W. Kernighan, in the paper Unix for Beginners (1979)<br/><br/></code><p>Beauty is more important in computing than anywhere else in technology because software is so complicated. Beauty is the ultimate defence against complexity.</p>  <pre><code>-- David Gelernter<br/><br/></code></pre><p>UNIX was not designed to stop its users from doing stupid things, as that would also stop them from doing clever things.</p>  <code>-- Doug Gwyn<br/><br/></code><p>If you're willing to restrict the flexibility of your approach, you can almost always do something better.</p>  <pre><code>-- John Carmack<br/><br/></code></pre><p>All software sucks, be it open-source [or] proprietary. The only question is what can be done with particular instance of suckage, and that's where having the source matters.</p>  <code>-- viro [http://www.ussg.iu.edu/hypermail/linux/kernel/0404.3/1344.html]<br/><br/></code><p>It's not that perl programmers are idiots, it's that the language rewards idiotic behavior in a  way that no other language or tool has ever done.</p>  <pre><code>-- Erik Naggum, comp.lang.lisp<br/><br/></code></pre><p>Simplicity is prerequisite for reliability.</p>  <code>-- Edsger W. Dijkstra<br/><br/></code><p>Beware of "the real world". A speaker's apeal to it is always an invitation not to challenge his tacit assumptions.</p>  <pre><code>-- Edsger W. Dijkstra</code></pre><p>Unix is a junk OS designed by a committee of PhDs</p>  <pre><code>-- Dave Cutler<br/><br/></code></pre><p>Forward thinking was just the thing that made multics what it is today.</p>  <code>-- Erik Quanstrom<br/><br/></code><p>I remarked to Dennis [Ritchie] that easily half the code I was writing in Multics was error recovery code. He said, "We left all that stuff out [of Unix]. If there's an error, we have this routine called panic, and when it is called, the machine crashes, and you holler down the hall, 'Hey, reboot it.'"</p>  <pre><code>-- Tom Van Vleck [http://www.multicians.org/unix.html]<br/><br/></code></pre><p>The key to performance is elegance, not battalions of special cases.</p>  <code>   -- Jon Bentley and Doug McIlroy<br/><br/></code><p>Measuring programming progress by lines of code is like measuring aircraft building progress by weight.</p>  <pre><code>   -- Bill Gates<br/><br/></code></pre><p>Haskell is faster than C++, more concise than Perl, more regular than Python, more flexible than Ruby, more typeful than C#, more robust than Java, and has absolutely nothing in common with PHP.</p>  <code>   -- Autrijus Tang<br/><br/></code><p>Object-oriented design is the roman numerals of computing.</p>  <pre><code>-- Rob Pike<br/><br/></code></pre><p>{ajh} I always viewed HURD development like the Special Olympics of free software.</p><p><br/></p><p>We have persistant(sic) objects, they're called files.</p>  <pre><code>-- Ken Thompson</code><br/></pre><br/><p>Simplicity is the ultimate sophistication.</p>  <pre><code>   -- Leonardo da Vinci<br/><br/></code></pre><p>Increasingly, people seem to misinterpret complexity as sophistication, which is baffling---the incomprehensible should cause suspicion rather than admiration.  Possibly this trend results from a mistaken belief that using a somewhat mysterious device confers an aura of power on the user.</p>  <code>   -- Niklaus Wirth<br/><br/>y como cierre para divertirse un buen rato:<br/><br/>http://harmful.cat-v.org/software/java<br/>http://harmful.cat-v.org/software/c++/<br/></code><pre><br/></pre>
<div style="clear: both;"/>
