
<div class="document" id="how-to-generate-exe-files-and-installers-for-a-python-applications"><h1 class="title">How to generate .exe files and installers for a python applications</h1><br/><p>This document describes the steps required to create an executable file from a<br/>
python program and how to build an installer and portable file from that<br/>
application.</p><br/><p>The document assumes that the application is based on GTK but it should work<br/>
with minor changes for other toolkits.</p><div class="section" id="why-an-installer"><h1>why an installer</h1><ul class="simple"><li>many components are required to install by hand by the end user for a simple application</li>
<li>a lot of small installers</li>
<li>hard to find</li>
<li>hard to match the exact versions that work together</li>
<li>install them in the required order</li>
<li>pray</li>

<li>sometimes even doing everything right it may not work</li>
<li>easy to automate and document to replicate with each new version</li>
<li>free the end user from problems to use the app</li>
</ul></div><div class="section" id="required-components"><h1>required components</h1><ul class="simple"><li>python</li>
<li>all the libraries used by the application</li>
<li>py2exe</li>

<li>nsis</li>
<li>time and luck ;)</li>
</ul></div><div class="section" id="installers"><h1>installers</h1><p>here are listed the links to the installers of all the components used in the example.</p><ul class="simple"><li><a class="reference external" href="http://python.org/ftp/python/2.6.6/python-2.6.6.msi">http://python.org/ftp/python/2.6.6/python-2.6.6.msi</a></li>
<li><a class="reference external" href="http://sourceforge.net/projects/py2exe/files/py2exe/0.6.9/py2exe-0.6.9.win32-py2.6.exe/download">http://sourceforge.net/projects/py2exe/files/py2exe/0.6.9/py2exe-0.6.9.win32-py2.6.exe/download</a></li>
<li><a class="reference external" href="http://ftp.gnome.org/pub/GNOME/binaries/win32/pycairo/1.8/pycairo-1.8.6.win32-py2.6.exe">http://ftp.gnome.org/pub/GNOME/binaries/win32/pycairo/1.8/pycairo-1.8.6.win32-py2.6.exe</a></li>

<li><a class="reference external" href="http://ftp.gnome.org/pub/GNOME/binaries/win32/pygobject/2.20/pygobject-2.20.0.win32-py2.6.exe">http://ftp.gnome.org/pub/GNOME/binaries/win32/pygobject/2.20/pygobject-2.20.0.win32-py2.6.exe</a></li>
<li><a class="reference external" href="http://ftp.gnome.org/pub/GNOME/binaries/win32/pygtk/2.16/pygtk-2.16.0+glade.win32-py2.6.exe">http://ftp.gnome.org/pub/GNOME/binaries/win32/pygtk/2.16/pygtk-2.16.0+glade.win32-py2.6.exe</a></li>
<li><a class="reference external" href="http://sourceforge.net/projects/pywin32/files/pywin32/Build%20214/pywin32-214.win32-py2.6.exe/download">http://sourceforge.net/projects/pywin32/files/pywin32/Build%20214/pywin32-214.win32-py2.6.exe/download</a></li>
<li><a class="reference external" href="http://sourceforge.net/projects/gtk-win/files/GTK%2B%20Runtime%20Environment/GTK%2B%202.22/gtk2-runtime-2.22.0-2010-10-01-ash.exe/download">http://sourceforge.net/projects/gtk-win/files/GTK%2B%20Runtime%20Environment/GTK%2B%202.22/gtk2-runtime-2.22.0-2010-10-01-ash.exe/download</a></li>
<li><a class="reference external" href="http://sourceforge.net/projects/gtk-win/files/GTK%2B%20Themes%20Package/2009-09-07/gtk2-themes-2009-09-07-ash.exe/download">http://sourceforge.net/projects/gtk-win/files/GTK%2B%20Themes%20Package/2009-09-07/gtk2-themes-2009-09-07-ash.exe/download</a></li>
<li><a class="reference external" href="http://prdownloads.sourceforge.net/nsis/nsis-2.46-setup.exe?download">http://prdownloads.sourceforge.net/nsis/nsis-2.46-setup.exe?download</a></li>
</ul></div><div class="section" id="installation-order"><h1>installation order</h1><br/><p>some installers are independent from the others, but to avoid posible problems I recommend the installation in this order.</p><ul class="simple"><li>python</li>
<li>gtk-runtime</li>
<li>gtk2-themes</li>
<li>nsis</li>
<li>pygobject</li>
<li>pycairo</li>
<li>pygtk</li>

<li>pywin32</li>
<li>py2exe</li>
</ul></div><div class="section" id="extra-tasks"><h1>extra tasks</h1><ul class="simple"><li>set the PATH environment variable to add the path to the python installation</li>
<li>test that the installation works with a simple gtk application</li>
</ul><pre class="literal-block">&gt;&gt;&gt; import gtk

&gt;&gt;&gt; w = gtk.Window()
&gt;&gt;&gt; l = gtk.Label("asd")
&gt;&gt;&gt; w.add(l)
&gt;&gt;&gt; w.show_all()
&gt;&gt;&gt; gtk.main()
</pre></div><div class="section" id="test-with-a-sample-application"><h1>test with a sample application</h1><br/><p>I created a repository with a sample application to test the steps, the application is available in github here:</p><p><a class="reference external" href="http://github.com/marianoguerra/PyGtkOnWindows">http://github.com/marianoguerra/PyGtkOnWindows</a></p><div class="section" id="steps"><h2>steps</h2><ul class="simple"><li>download it</li>
<li>unpack it</li>
<li>run python setup.py py2exe</li>
<li>copy the lib and share directory from the gtk runtime installation  (not the pygtk installation) to the dist directory</li>
<li>copy all the files from the dll directory to the dist directory</li>

<li>remove unused locales and unused themes (I keep only ms theme)</li>
<li>create the following dirs inside dist: etc/gtk-2.0</li>
<li>inside that create a file called gtkrc with a line like this inside:<ul><li>gtk-theme-name = "MS-Windows"</li>
<li>you can change the theme by keeping that theme inside share/themes and changing the name in gtkrc</li>
</ul></li>
<li>right click on ejemplo.nsi and select "Compile NSIS Script"</li>
<li>right click on ejemplo-portable.nsi and select "Compile NSIS Script"</li>

<li>you should have the installer and portable versions available</li>
<li>to test that it works correctly, run the installer and portable versions in a windows installation without the packages you installed previously</li>
</ul></div></div><div class="section" id="test-with-a-real-application"><h1>test with a real application</h1><p>now to make it feel more real let's create an installer and portable versions<br/>
for a real world program, in this case, a project of mine called emesene 2<br/>
(<a class="reference external" href="http://www.emesene.org/">http://www.emesene.org/</a>).</p><div class="section" id="id1"><h2>steps</h2><br/><ul class="simple"><li>download it from <a class="reference external" href="http://github.com/emesene/emesene">http://github.com/emesene/emesene</a></li>
<li>unpack it</li>
<li>copy setup.py and ez_setup.py to the emesene directory</li>
<li>cd to emesene</li>
<li>run python setup.py py2exe</li>
<li>cd ..</li>
<li>copy the lib and share directory from the gtk runtime installation  (not the pygtk installation) to the dist directory</li>
<li>copy all the files from the dll directory to the dist directory</li>

<li>remove unused locales and unused themes (I keep only ms theme)</li>
<li>create the following dirs inside dist: etc/gtk-2.0</li>
<li>inside that create a file called gtkrc with a line like this inside:<ul><li>gtk-theme-name = "MS-Windows"</li>
<li>you can change the theme by keeping that theme inside share/themes and changing the name in gtkrc</li>
</ul></li>
<li>right click on emesene.nsi and select "Compile NSIS Script"</li>
<li>right click on emesene-portable.nsi and select "Compile NSIS Script"</li>

<li>you should have the installer and portable versions available</li>
<li>to test that it works correctly, run the installer and portable versions in a windows installation without the packages you installed previously</li>
</ul></div></div><div class="section" id="notes"><h1>notes</h1><ul class="simple"><li>I get some needed dlls from portable python (<a class="reference external" href="http://www.portablepython.com/">http://www.portablepython.com/</a>) and inkscape (<a class="reference external" href="http://inkscape.org/">http://inkscape.org/</a>)</li>

</ul></div></div>
<div style="clear: both;"/>
