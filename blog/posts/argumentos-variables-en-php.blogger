
queres tener una funcion con argumentos variables en php?<br/>tenes un array y queres llamar a una funcion con esos argumentos?<br/>'s/funcion/metodo/g? ;)<br/><br/>entonces este post es para vos!<br/><br/>salio marquerinero el arranque...<br/><br/>bueno ante esas necesidades hice este ejemplito, es un poco tricky pero se puede hacer..<br/><br/>aca va<br/><br/><div class="highlight"><pre><span class="cp">&lt;?php</span><br/><br/><span class="k">function</span> <span class="nf">suma</span><span class="p">(</span><span class="nv">$num1</span><span class="p">,</span> <span class="nv">$num2</span><span class="p">)</span><br/><span class="p">{</span><br/><span class="k">return</span> <span class="nv">$num1</span> <span class="o">+</span> <span class="nv">$num2</span><span class="p">;</span><br/><span class="p">}</span><br/><br/><span class="k">function</span> <span class="nf">resta</span><span class="p">(</span><span class="nv">$num1</span><span class="p">,</span> <span class="nv">$num2</span><span class="p">)</span><br/><span class="p">{</span><br/><span class="k">return</span> <span class="nv">$num1</span> <span class="o">-</span> <span class="nv">$num2</span><span class="p">;</span><br/><span class="p">}</span><br/><br/><span class="k">function</span> <span class="nf">operacion</span><span class="p">()</span><br/><span class="p">{</span><br/><span class="nv">$args</span> <span class="o">=</span> <span class="nb">func_get_args</span><span class="p">();</span><br/><span class="nv">$op</span> <span class="o">=</span> <span class="nb">array_shift</span><span class="p">(</span><span class="nv">$args</span><span class="p">);</span><br/><span class="k">print</span><span class="p">(</span><span class="nv">$op</span> <span class="o">.</span> <span class="s1">'='</span><span class="p">);</span><br/><span class="k">if</span><span class="p">(</span><span class="nv">$op</span> <span class="o">==</span> <span class="s2">"suma"</span><span class="p">)</span><br/><span class="p">{</span><br/><span class="k">print</span><span class="p">(</span><span class="nb">call_user_func_array</span><span class="p">(</span><span class="s1">'suma'</span><span class="p">,</span> <span class="nv">$args</span><span class="p">));</span><br/><span class="p">}</span><br/><span class="k">elseif</span><span class="p">(</span><span class="nv">$op</span> <span class="o">==</span> <span class="s2">"resta"</span><span class="p">)</span><br/><span class="p">{</span><br/><span class="k">print</span><span class="p">(</span><span class="nb">call_user_func_array</span><span class="p">(</span><span class="s1">'resta'</span><span class="p">,</span> <span class="nv">$args</span><span class="p">));</span><br/><span class="p">}</span><br/><span class="k">else</span><br/><span class="p">{</span><br/><span class="k">print</span><span class="p">(</span><span class="s1">'?'</span><span class="p">);</span><br/><span class="p">}</span><br/><span class="p">}</span><br/><br/><span class="k">class</span> <span class="nc">Foo</span><br/><span class="p">{</span><br/><span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">()</span><br/><span class="p">{</span><br/><br/><span class="p">}</span><br/><br/><span class="k">public</span> <span class="k">function</span> <span class="nf">suma</span><span class="p">(</span><span class="nv">$num1</span><span class="p">,</span> <span class="nv">$num2</span><span class="p">)</span><br/><span class="p">{</span><br/><span class="k">return</span> <span class="nv">$num1</span> <span class="o">+</span> <span class="nv">$num2</span><span class="p">;</span><br/><span class="p">}</span><br/><br/><span class="k">public</span> <span class="k">static</span> <span class="k">function</span> <span class="nf">resta</span><span class="p">(</span><span class="nv">$num1</span><span class="p">,</span> <span class="nv">$num2</span><span class="p">)</span><br/><span class="p">{</span><br/><span class="k">return</span> <span class="nv">$num1</span> <span class="o">-</span> <span class="nv">$num2</span><span class="p">;</span><br/><span class="p">}</span><br/><span class="p">}</span><br/><br/><span class="nv">$foo</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Foo</span><span class="p">();</span><br/><br/><span class="nx">operacion</span><span class="p">(</span><span class="s2">"suma"</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span><br/><span class="nx">operacion</span><span class="p">(</span><span class="s2">"resta"</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span><br/><span class="nx">operacion</span><span class="p">(</span><span class="s2">"asd"</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">);</span><br/><span class="c">// como llamar a un metodo de un objeto</span><br/><span class="k">print</span><span class="p">(</span><span class="s1">'$foo-&gt;suma='</span> <span class="o">.</span> <span class="nb">call_user_func_array</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="nv">$foo</span><span class="p">,</span> <span class="s1">'suma'</span><span class="p">),</span> <span class="k">array</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">)));</span><br/><span class="c">// como llamar al metodo de una clase</span><br/><span class="k">print</span><span class="p">(</span><span class="s1">'Foo::resta='</span> <span class="o">.</span> <span class="nb">call_user_func_array</span><span class="p">(</span><span class="k">array</span><span class="p">(</span><span class="s1">'Foo'</span><span class="p">,</span> <span class="s1">'resta'</span><span class="p">),</span> <span class="k">array</span><span class="p">(</span><span class="m">2</span><span class="p">,</span> <span class="m">2</span><span class="p">)));</span><br/><br/><span class="cp">?&gt;</span><span class="x"/><br/></pre></div>
<div style="clear: both;"/>
