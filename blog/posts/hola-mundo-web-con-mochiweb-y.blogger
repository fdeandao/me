
a falta de buenos ejemplos de como hacer un hola mundo web en erlang hago uno yo aca<br/><br/>para el ejemplo vamos a usar <a href="http://code.google.com/p/mochiweb">mochiweb</a> y <a href="http://github.com/rklophaus/SimpleBridge">simplebridge</a><br/><br/>de sus paginas, saco lo siguiente<br/><br/>mochiweb:<br/><br/><span style="font-style:italic;">MochiWeb is an Erlang library for building lightweight HTTP servers. </span><br/><br/>simplebridge:<br/><br/><span style="font-style:italic;"><br/>SimpleBridge takes the pain out of coding to multiple Erlang HTTP servers by creating a standardized interface. It currently supports Mochiweb, Inets, and Misultin, with Yaws coming soon.</span><br/><br/>para usarlos tenemos que tener ambos instalados, asi que empezemos por bajarlos y compilarlos<br/><br/><pre><br/># creemos una carpeta<br/>mkdir erlweb<br/>cd erlweb<br/># descargamos simplebridge<br/>git clone http://github.com/rklophaus/SimpleBridge.git<br/><br/># lo compilamos<br/>cd SimpleBridge/<br/>make<br/><br/># volvemos a la base<br/>cd ..<br/><br/># descargamos mochiweb<br/>svn checkout http://mochiweb.googlecode.com/svn/trunk/ mochiweb<br/><br/># lo compilamos<br/>cd mochiweb/<br/>make<br/><br/># volvemos a la base<br/>cd ..<br/><br/></pre><br/><br/>bueno, ya tenemos los componentes necesarios, vamos con el ejemplo, crea un archivo hello.erl y pega el siguiente codigo:<br/><br/><div class="highlight"><pre><span class="p">-</span><span class="ni">module</span><span class="p">(</span><span class="n">hello</span><span class="p">).</span><br/><span class="p">-</span><span class="ni">export</span><span class="p">([</span><span class="n">start</span><span class="o">/</span><span class="mi">0</span><span class="p">,</span> <span class="n">loop</span><span class="o">/</span><span class="mi">1</span><span class="p">]).</span><br/><br/><span class="nf">start</span><span class="p">()</span> <span class="o">-&gt;</span><br/><span class="nv">Options</span> <span class="o">=</span> <span class="p">[{</span><span class="n">ip</span><span class="p">,</span> <span class="s">"127.0.0.1"</span><span class="p">},</span> <span class="p">{</span><span class="n">port</span><span class="p">,</span> <span class="mi">8000</span><span class="p">}],</span><br/><span class="nv">Loop</span> <span class="o">=</span> <span class="k">fun</span> <span class="n">loop</span><span class="o">/</span><span class="mi">1</span><span class="p">,</span><br/><span class="nn">mochiweb_http</span><span class="p">:</span><span class="n">start</span><span class="p">([{</span><span class="n">name</span><span class="p">,</span> <span class="n">mochiweb_example_app</span><span class="p">},</span> <span class="p">{</span><span class="n">loop</span><span class="p">,</span> <span class="nv">Loop</span><span class="p">}</span> <span class="p">|</span> <span class="nv">Options</span><span class="p">]).</span><br/><br/><span class="nf">response</span><span class="p">(</span><span class="nv">Req</span><span class="p">,</span> <span class="nv">Root</span><span class="p">)</span> <span class="o">-&gt;</span><br/><span class="nn">simple_bridge</span><span class="p">:</span><span class="n">make_response</span><span class="p">(</span><span class="n">mochiweb_response_bridge</span><span class="p">,</span> <span class="p">{</span><span class="nv">Req</span><span class="p">,</span> <span class="nv">Root</span><span class="p">}).</span><br/><br/><span class="nf">response_ok</span><span class="p">(</span><span class="nv">Req</span><span class="p">,</span> <span class="nv">Root</span><span class="p">,</span> <span class="nv">ContentType</span><span class="p">,</span> <span class="nv">Data</span><span class="p">)</span> <span class="o">-&gt;</span><br/><span class="nv">Response</span> <span class="o">=</span> <span class="n">response</span><span class="p">(</span><span class="nv">Req</span><span class="p">,</span> <span class="nv">Root</span><span class="p">),</span><br/><span class="nv">Response1</span> <span class="o">=</span> <span class="nv">Response</span><span class="p">:</span><span class="n">status_code</span><span class="p">(</span><span class="mi">200</span><span class="p">),</span><br/><span class="nv">Response2</span> <span class="o">=</span> <span class="nv">Response1</span><span class="p">:</span><span class="n">header</span><span class="p">(</span><span class="s">"Content-Type"</span><span class="p">,</span> <span class="nv">ContentType</span><span class="p">),</span><br/><span class="nv">Response3</span> <span class="o">=</span> <span class="nv">Response2</span><span class="p">:</span><span class="n">data</span><span class="p">(</span><span class="nv">Data</span><span class="p">),</span><br/><span class="nv">Response3</span><span class="p">:</span><span class="n">build_response</span><span class="p">().</span><br/><br/><span class="nf">loop</span><span class="p">(</span><span class="nv">Req</span><span class="p">)</span> <span class="o">-&gt;</span><br/><span class="nv">HTML</span> <span class="o">=</span> <span class="p">[</span><span class="s">"&lt;h1&gt;Hello, World!&lt;/h1&gt;"</span><span class="p">],</span><br/><span class="n">response_ok</span><span class="p">(</span><span class="nv">Req</span><span class="p">,</span> <span class="s">"./wwwroot"</span><span class="p">,</span> <span class="s">"text/html"</span><span class="p">,</span> <span class="nv">HTML</span><span class="p">).</span><br/></pre></div><br/><br/>ahora abrimos una consola interactiva incluyendo en el path los modulos que vamos a usar (mochiweb y simplebridge)<br/><br/><pre><br/>erl -pa ./mochiweb/ebin/ -pa ./SimpleBridge/ebin/<br/></pre><br/><br/>en la consola:<br/><br/><pre><br/>Eshell V5.7.4  (abort with ^G)<br/>1&gt; c(hello).<br/>{ok,hello}<br/>2&gt; hello:start().<br/>{ok,}<br/></pre><br/><br/>abrimos nuestro navegador apuntando a <a href="http://localhost:8000/">http://localhost:8000/</a> y deberiamos ver nuestro hola mundo<br/><br/>obviamente que te voy a dar la version en efene ;) pero esta ves en ifene (la diferencia es que ifene define bloques por indentacion en lugar de llaves)<br/><br/><div class="highlight"><pre><span class="p">@</span><span class="k">public</span><br/><span class="nx">start</span> <span class="o">=</span> <span class="k">fn</span> <span class="p">()</span><br/><span class="nx">Options</span> <span class="o">=</span> <span class="p">[(</span><span class="nx">ip</span><span class="p">,</span> <span class="s2">"127.0.0.1"</span><span class="p">),</span> <span class="p">(</span><span class="nx">port</span><span class="p">,</span> <span class="mi">8000</span><span class="p">)]</span><br/><span class="nx">Loop</span> <span class="o">=</span> <span class="k">fn</span> <span class="nx">loop</span><span class="p">:</span><span class="mi">1</span><br/><span class="nx">mochiweb_http</span><span class="o">.</span><span class="nx">start</span><span class="p">([(</span><span class="nx">name</span><span class="p">,</span> <span class="nx">mochiweb_example_app</span><span class="p">),</span> <span class="p">(</span><span class="nx">loop</span><span class="p">,</span> <span class="nx">Loop</span><span class="p">)</span> <span class="p">:</span> <span class="nx">Options</span><span class="p">])</span><br/><br/><span class="nx">response</span> <span class="o">=</span> <span class="k">fn</span> <span class="p">(</span><span class="nx">Req</span><span class="p">,</span> <span class="nx">Root</span><span class="p">)</span><br/><span class="nx">simple_bridge</span><span class="o">.</span><span class="nx">make_response</span><span class="p">(</span><span class="nx">mochiweb_response_bridge</span><span class="p">,</span> <span class="p">(</span><span class="nx">Req</span><span class="p">,</span> <span class="nx">Root</span><span class="p">))</span><br/><br/><span class="nx">response_ok</span> <span class="o">=</span> <span class="k">fn</span> <span class="p">(</span><span class="nx">Req</span><span class="p">,</span> <span class="nx">Root</span><span class="p">,</span> <span class="nx">ContentType</span><span class="p">,</span> <span class="nx">Data</span><span class="p">)</span><br/><span class="nx">Response</span> <span class="o">=</span> <span class="nx">response</span><span class="p">(</span><span class="nx">Req</span><span class="p">,</span> <span class="nx">Root</span><span class="p">)</span><br/><span class="nx">Response1</span> <span class="o">=</span> <span class="nx">Response</span><span class="o">.</span><span class="nx">status_code</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span><br/><span class="nx">Response2</span> <span class="o">=</span> <span class="nx">Response1</span><span class="o">.</span><span class="nx">header</span><span class="p">(</span><span class="s2">"Content-Type"</span><span class="p">,</span> <span class="nx">ContentType</span><span class="p">)</span><br/><span class="nx">Response3</span> <span class="o">=</span> <span class="nx">Response2</span><span class="o">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">Data</span><span class="p">)</span><br/><span class="nx">Response3</span><span class="o">.</span><span class="nx">build_response</span><span class="p">()</span><br/><br/><span class="p">@</span><span class="k">public</span><br/><span class="nx">loop</span> <span class="o">=</span> <span class="k">fn</span> <span class="p">(</span><span class="nx">Req</span><span class="p">)</span><br/><span class="nx">HTML</span> <span class="o">=</span> <span class="p">[</span><span class="s2">"&lt;h1&gt;Hello, World!&lt;/h1&gt;"</span><span class="p">]</span><br/><span class="nx">response_ok</span><span class="p">(</span><span class="nx">Req</span><span class="p">,</span> <span class="s2">"./wwwroot"</span><span class="p">,</span> <span class="s2">"text/html"</span><span class="p">,</span> <span class="nx">HTML</span><span class="p">)</span><br/></pre></div><br/><br/>lo guardamos en hello.ifn y lo compilamos<br/><br/><pre><br/>fnc hello.ifn<br/></pre><br/><br/>lo ejecutamos desde la consola de erlang (mas facil ;)<br/><br/><pre><br/>erl -pa ./mochiweb/ebin/ -pa ./SimpleBridge/ebin/<br/></pre><br/><br/>en la consola:<br/><br/><pre><br/>Eshell V5.7.4  (abort with ^G)<br/>1&gt; hello:start().<br/>{ok,}<br/></pre><br/><br/>deberiamos obtener el mismo resultado.
<div style="clear: both;"/>
